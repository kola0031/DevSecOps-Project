name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      TMDB_V3_API_KEY: ${{ secrets.TMDB_V3_API_KEY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set Up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Step 3: Install Dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: SonarQube Analysis
      - name: SonarQube Analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=Netflix
            -Dsonar.organization=<your-organization>
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

      # Step 5: Dependency Check
      - name: OWASP Dependency-Check
        uses: actions/setup-java@v3
        with:
          java-version: 17
      - name: Run OWASP Dependency-Check
        run: |
          curl -LO https://github.com/jeremylong/DependencyCheck/releases/download/v8.2.1/dependency-check-8.2.1-release.zip
          unzip dependency-check-8.2.1-release.zip
          ./dependency-check/bin/dependency-check.sh --project Netflix --scan . --format ALL

      # Step 6: Trivy File System Scan
      - name: Trivy FS Scan
        run: |
          sudo apt-get update
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
          trivy fs . > trivyfs.txt

      # Step 7: Docker Build and Push
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_V3_API_KEY }} -t netflix .
          docker tag netflix ${{ secrets.DOCKER_USERNAME }}/netflix:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/netflix:latest

      # Step 8: Trivy Image Scan
      - name: Trivy Image Scan
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/netflix:latest > trivyimage.txt

      # Step 9: Deploy to Container
      - name: Deploy Application
        run: |
          docker stop netflix || true
          docker rm netflix || true
          docker run -d --name netflix -p 8081:80 ${{ secrets.DOCKER_USERNAME }}/netflix:latest
