name: DevSecOps Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js 16
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

  sonar:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up SonarQube Scanner
        uses: warchant/setup-sonar-scanner@v7

      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Netflix \
            -Dsonar.projectName=Netflix \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://3.15.29.26:9000/ \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  security_scan:
    runs-on: self-hosted
    needs: sonar

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        run: |
          docker run --rm --volume $(pwd):/src --volume $(pwd)/reports:/report \
          owasp/dependency-check --scan /src --format XML --out /report/dependency-check-report.xml

      - name: Run Trivy File System Scan
        run: trivy fs . > trivyfs.txt

  docker_build:
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker build --build-arg TMDB_V3_API_KEY=364c3ef560e4e0d6bf37e640133ba64e -t netflix .
          docker tag netflix kola0031/netflix:latest
          docker push kola0031/netflix:latest

  trivy_image_scan:
    runs-on: ubuntu-latest
    needs: docker_build

    steps:
      - name: Run Trivy Image Scan
        run: trivy image kola0031/netflix:latest > trivyimage.txt

  deploy:
    runs-on: ubuntu-latest
    needs: trivy_image_scan

    steps:
      - name: Deploy Container
        run: docker run -d -p 8081:80 kola0031/netflix:latest
